const ContextMenuLib = (() => {
    let t = null;

    const e = (t, e) => {
        const n = t.getAttribute("data-cm-bind");
        if (n) {
            const t = JSON.parse(n);
            e.boundData = t;
        }
    };

    const n = (t, e) => {
        const n = t.getAttribute("data-cm-callback");
        if (n && typeof window[n] === "function") {
            const t = e.boundData || {};
            window[n](t);
        }
    };

    const i = (e, n) => {
        t && o();
        const { clientX: i, clientY: c } = e;
        n.style.display = "block";
        const l = n.offsetWidth,
            d = n.offsetHeight,
            a = i + l > window.innerWidth ? window.innerWidth - l - 10 : i,
            r = c + d > window.innerHeight ? window.innerHeight - d - 10 : c;
        n.style.left = `${a}px`;
        n.style.top = `${r}px`;
        t = n;
    };

    const o = () => {
        if (t) {
            t.style.display = "none";
            t = null;
        }
    };

    const attachListeners = () => {
        document.querySelectorAll(".cm-toggle").forEach(t => {
            const n = t.getAttribute("data-cm-target"),
                o = document.querySelector(n);
            if (o) {
                t.addEventListener("contextmenu", n => {
                    n.preventDefault(), e(t, o), i(n, o);
                });
                t.addEventListener("touchstart", n => {
                    if (n.touches.length === 2) {
                        n.preventDefault(), e(t, o), i(n, o);
                    }
                });
            }
        });

        document.addEventListener("click", o);

        document.querySelectorAll(".context-menu-dialog ul li").forEach(e => {
            e.addEventListener("click", event => {
                event.stopPropagation(); // Prevents duplicate triggers due to bubbling
                if (t) n(e, t);
            });
        });
    };

    return {
        init: () => {
            ContextMenuLib.refresh();
        },
        refresh: () => {
            document.querySelectorAll(".context-menu-dialog ul li").forEach(e => {
                e.replaceWith(e.cloneNode(true)); // Removes all existing event listeners
            });

            attachListeners();
        }
    };
})();

ContextMenuLib.init();
